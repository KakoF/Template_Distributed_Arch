version: "3.8"
services:

  #Redis
  redis:
    container_name: 'redis-template'
    image: redis
    command: redis-server --requirepass Admin@#
    ports:
      - '6379:6379'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.1'
          memory: '256M'

  #Mongo
  mongodb:
    image: mongo
    container_name: mongodb-template
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin_1234
    ports:
      - "27017:27017"
    command: mongod --bind_ip 0.0.0.0
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.1'
          memory: '256M'

  #MongoExpress
  mongo-express:
    container_name: mongo-express-template
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin_1234
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin_1234@mongodb:27017/
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.1'
          memory: '256M'

  #Prometheus
  prometheus:
    image: prom/prometheus:latest
    user: root
    container_name: prometheus-template
    hostname: prometheus
    volumes:
      - ./prometheus-conf/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 9090:9090
    networks:
      - template
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.1'
          memory: '256M'

  #Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana-template
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - 3000:3000
    networks:
      - template
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.1'
          memory: '256M'

  #Elasticsearch
  elasticsearch:
    container_name: elasticsearch-template
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    networks:
      - template
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2G'
        reservations:
          cpus: '1'
          memory: '1G'

  #Kibana
  kibana:
    container_name: kibana-template
    image: docker.elastic.co/kibana/kibana:8.13.4
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
      - NODE_OPTIONS=--max-old-space-size=4096
    networks:
      - template
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2G'
        reservations:
          cpus: '1'
          memory: '1G'

  #RabbitMq
  rabbitmq:
    container_name: rabbitmq-template
    image: masstransit/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.1'
          memory: '256M'

  #Zookeeper-confluence
  zookeeper-confluence:
    container_name: zookeeper-confluence-template
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.1'
          memory: '256M'
  #Kafka-confluence
  kafka-confluence:
    container_name: kafka-confluence-template
    image: confluentinc/cp-kafka:latest
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-confluence:2181
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.1'
          memory: '256M'
  #Kafka-confluence
  kafka-ui:
    container_name: kafka-ui-template
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connection:
            localhost:
              properties:
                bootstrap.servers: "kafka-confluence:29092"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.1'
          memory: '256M'


  ##Jaeger
  jaeger:
    image: jaegertracing/opentelemetry-all-in-one
    container_name: jaeger-template
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      COLLECTOR_OTLP_GRPC_PORT: 4317

  #SqlServer
  sqlServer:
    container_name: sqlServer-template
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: '!AdminPassword'
    ports:
      - '1433:1433'
    expose:
      - '1433'
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '4G'
        reservations:
          cpus: '1'
          memory: '2G'

  #Postgres
  postgres:
    container_name: postgres-template
    image: postgres
    environment:
      POSTGRES_PASSWORD: AdminPassword
      POSTGRES_USER: Admin
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
    expose:
      - '5432'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.1'
          memory: '256M'

volumes:
  prometheus_data: {}
  elasticsearch-data:
networks:
  template:
    driver: bridge
